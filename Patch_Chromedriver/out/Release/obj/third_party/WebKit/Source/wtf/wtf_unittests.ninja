build $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.actions_depends.stamp: $
    stamp libwtf_unittest_helpers.a libwtf.a $
    obj/third_party/WebKit/Source/unittest_config.actions_depends.stamp $
    libtest_support_base.a libicui18n.a libicuuc.a icudtl.dat icudtl.dat $
    libgmock.a libgtest.a libbase.a libbase_static.a $
    liballocator_extension_thunks.a libmodp_b64.a libdynamic_annotations.a $
    libevent.a libbase_i18n.a libxml2.a libchrome_zlib.a libzlib_x86_simd.a

build $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp: $
    stamp icudtl.dat icudtl.dat icudtl.dat

defines = -DV8_DEPRECATION_WARNINGS -DCLD_VERSION=2 $
    -D__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORE=0 -DCHROMIUM_BUILD $
    -DCR_CLANG_REVISION=254049-1 -DUSE_LIBJPEG_TURBO=1 $
    -DENABLE_ONE_CLICK_SIGNIN -DENABLE_PRE_SYNC_BACKUP -DENABLE_WEBRTC=1 $
    -DENABLE_MEDIA_ROUTER=1 -DENABLE_PEPPER_CDMS $
    -DENABLE_CONFIGURATION_POLICY -DENABLE_NOTIFICATIONS -DENABLE_HIDPI=1 $
    -DDONT_EMBED_BUILD_METADATA -DFIELDTRIAL_TESTING_ENABLED $
    -DENABLE_TASK_MANAGER=1 -DENABLE_EXTENSIONS=1 -DENABLE_PDF=1 $
    -DENABLE_PLUGIN_INSTALLATION=1 -DENABLE_PLUGINS=1 $
    -DENABLE_SESSION_SERVICE=1 -DENABLE_THEMES=1 -DENABLE_AUTOFILL_DIALOG=1 $
    -DENABLE_BACKGROUND=1 -DENABLE_PRINTING=1 -DENABLE_BASIC_PRINTING=1 $
    -DENABLE_PRINT_PREVIEW=1 -DENABLE_SPELLCHECK=1 $
    -DUSE_BROWSER_SPELLCHECKER=1 -DENABLE_CAPTIVE_PORTAL_DETECTION=1 $
    -DENABLE_APP_LIST=1 -DENABLE_SETTINGS_APP=1 -DENABLE_SUPERVISED_USERS=1 $
    -DENABLE_SERVICE_DISCOVERY=1 -DV8_USE_EXTERNAL_STARTUP_DATA $
    -DFULL_SAFE_BROWSING -DSAFE_BROWSING_CSD -DSAFE_BROWSING_DB_LOCAL $
    -DGTEST_HAS_POSIX_RE=0 -DGTEST_LANG_CXX11=0 $
    -DENABLE_LAYOUT_UNIT_IN_INLINE_BOXES=0 $
    -DWTF_USE_CONCATENATED_IMPULSE_RESPONSES=1 $
    -DENABLE_INPUT_MULTIPLE_FIELDS_UI=1 -DENABLE_WEB_AUDIO=1 $
    -DU_USING_ICU_NAMESPACE=0 -DU_ENABLE_DYLOAD=0 -DU_STATIC_IMPLEMENTATION $
    -DUNIT_TEST -DGTEST_HAS_RTTI=0 -DUSE_LIBPCI=1 -DUSE_OPENSSL=1 $
    -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -DNDEBUG -DNVALGRIND $
    -DDYNAMIC_ANNOTATIONS_ENABLED=0 -D_FORTIFY_SOURCE=2
includes = -Igen -I../../third_party/WebKit/Source $
    -I../../third_party/icu/source/i18n $
    -I../../third_party/icu/source/common -I../../third_party/WebKit $
    -I../../testing/gmock/include -I../../testing/gtest/include -I../..
cflags = -isysroot $
    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk $
    -O2 -fvisibility=hidden -Werror -Wnewline-eof -mmacosx-version-min=10.6 $
    -arch x86_64 -Wall -Wendif-labels -Wextra -Wno-unused-parameter $
    -Wno-missing-field-initializers -Wno-selector-type-mismatch $
    -Wpartial-availability -Wheader-hygiene -Wno-char-subscripts $
    -Wno-unneeded-internal-declaration -Wno-covered-switch-default $
    -Wstring-conversion -Wno-c++11-narrowing -Wno-deprecated-register $
    -Wno-inconsistent-missing-override -Wno-shift-negative-value $
    -Wno-bitfield-width
cflags_c = -std=c99 -Xclang -load -Xclang $
    /Users/superadmin/tmp/src/third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.dylib $
    -Xclang -add-plugin -Xclang find-bad-constructs -Xclang $
    -plugin-arg-find-bad-constructs -Xclang check-templates $
    -fcolor-diagnostics -fno-strict-aliasing -Xclang -load -Xclang $
    /Users/superadmin/tmp/src/third_party/llvm-build/Release+Asserts/lib/libBlinkGCPlugin.dylib $
    -Xclang -add-plugin -Xclang blink-gc-plugin
cflags_cc = -std=c++11 -stdlib=libc++ -fno-rtti -fno-exceptions $
    -fvisibility-inlines-hidden -fno-threadsafe-statics -Xclang -load $
    -Xclang $
    /Users/superadmin/tmp/src/third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.dylib $
    -Xclang -add-plugin -Xclang find-bad-constructs -Xclang $
    -plugin-arg-find-bad-constructs -Xclang check-templates $
    -fcolor-diagnostics -fno-strict-aliasing -Xclang -load -Xclang $
    /Users/superadmin/tmp/src/third_party/llvm-build/Release+Asserts/lib/libBlinkGCPlugin.dylib $
    -Xclang -add-plugin -Xclang blink-gc-plugin
cflags_objc = $cflags_c -Wobjc-missing-property-synthesis
cflags_objcc = $cflags_cc -Wobjc-missing-property-synthesis $
    -fobjc-call-cxx-cdtors
arflags = 

build $
    obj/third_party/WebKit/Source/wtf/testing/wtf_unittests.RunAllTests.o: $
    cxx ../../third_party/WebKit/Source/wtf/testing/RunAllTests.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.ASCIICTypeTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/ASCIICTypeTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.ArrayBufferBuilderTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/ArrayBufferBuilderTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.AssertionsTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/AssertionsTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.CheckedArithmeticTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/CheckedArithmeticTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.DequeTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/DequeTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.FunctionalTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/FunctionalTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.HashMapTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/HashMapTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.HashSetTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/HashSetTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.ListHashSetTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/ListHashSetTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.MathExtrasTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/MathExtrasTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.OptionalTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/OptionalTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.PartitionAllocTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/PartitionAllocTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.RefPtrTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/RefPtrTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.SaturatedArithmeticTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/SaturatedArithmeticTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.StringExtrasTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/StringExtrasTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.StringHasherTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/StringHasherTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.TemporaryChangeTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/TemporaryChangeTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.TreeNodeTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/TreeNodeTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.VectorTest.o: cxx $
    ../../third_party/WebKit/Source/wtf/VectorTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/wtf_unittests.dtoa_test.o: cxx $
    ../../third_party/WebKit/Source/wtf/dtoa_test.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/testing/wtf_unittests.WTFTestPrintersTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/testing/WTFTestPrintersTest.cpp $
    || obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.AtomicStringTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/text/AtomicStringTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/text/wtf_unittests.CStringTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/text/CStringTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.StringBufferTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/text/StringBufferTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.StringBuilderTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/text/StringBuilderTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.StringImplTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/text/StringImplTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.StringOperatorsTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/text/StringOperatorsTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.TextCodecReplacementTest.o: $
    cxx $
    ../../third_party/WebKit/Source/wtf/text/TextCodecReplacementTest.cpp $
    || obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.TextCodecUTF8Test.o: $
    cxx ../../third_party/WebKit/Source/wtf/text/TextCodecUTF8Test.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp
build obj/third_party/WebKit/Source/wtf/text/wtf_unittests.WTFStringTest.o: $
    cxx ../../third_party/WebKit/Source/wtf/text/WTFStringTest.cpp || $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.compile_depends.stamp

ldflags = -Wl,-search_paths_first -Wl,-pie -Wl,-dead_strip $
    -mmacosx-version-min=10.6 -isysroot $
    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk $
    -arch x86_64 -L. -stdlib=libc++
libs = '-L../../third_party/libc++-static' -framework CoreFoundation $
    -framework Foundation -framework AppKit -framework ApplicationServices $
    -framework Carbon -framework IOKit -framework Security
build wtf_unittests: link $
    obj/third_party/WebKit/Source/wtf/testing/wtf_unittests.RunAllTests.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.ASCIICTypeTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.ArrayBufferBuilderTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.AssertionsTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.CheckedArithmeticTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.DequeTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.FunctionalTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.HashMapTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.HashSetTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.ListHashSetTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.MathExtrasTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.OptionalTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.PartitionAllocTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.RefPtrTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.SaturatedArithmeticTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.StringExtrasTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.StringHasherTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.TemporaryChangeTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.TreeNodeTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.VectorTest.o $
    obj/third_party/WebKit/Source/wtf/wtf_unittests.dtoa_test.o $
    obj/third_party/WebKit/Source/wtf/testing/wtf_unittests.WTFTestPrintersTest.o $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.AtomicStringTest.o $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.CStringTest.o $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.StringBufferTest.o $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.StringBuilderTest.o $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.StringImplTest.o $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.StringOperatorsTest.o $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.TextCodecReplacementTest.o $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.TextCodecUTF8Test.o $
    obj/third_party/WebKit/Source/wtf/text/wtf_unittests.WTFStringTest.o $
    libwtf_unittest_helpers.a libwtf.a libtest_support_base.a libicui18n.a $
    libicuuc.a libgmock.a libgtest.a libbase.a libbase_static.a $
    liballocator_extension_thunks.a libmodp_b64.a libdynamic_annotations.a $
    libevent.a libbase_i18n.a libxml2.a libchrome_zlib.a libzlib_x86_simd.a $
    | icudtl.dat $
    obj/third_party/WebKit/Source/unittest_config.actions_depends.stamp
  ld = $ldxx
  postbuilds = $ && (export $
      BUILT_FRAMEWORKS_DIR=/Users/superadmin/tmp/src/out/Release; export $
      BUILT_PRODUCTS_DIR=/Users/superadmin/tmp/src/out/Release; export $
      CONFIGURATION=Release; export EXECUTABLE_NAME=wtf_unittests; export $
      EXECUTABLE_PATH=wtf_unittests; export $
      FULL_PRODUCT_NAME=wtf_unittests; export PRODUCT_NAME=wtf_unittests; $
      export PRODUCT_TYPE=com.apple.product-type.tool; export $
      SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk; $
      export $
      SRCROOT=/Users/superadmin/tmp/src/out/Release/../../third_party/WebKit/Source/wtf; $
      export SOURCE_ROOT="$${SRCROOT}"; export $
      TARGET_BUILD_DIR=/Users/superadmin/tmp/src/out/Release; export $
      TEMP_DIR="$${TMPDIR}"; (cd ../../third_party/WebKit/Source/wtf && $
      ../../../../build/mac/change_mach_o_flags_from_xcode.sh); G=$$?; $
      ((exit $$G) || rm -rf wtf_unittests) && exit $$G)
