build obj/jingle/jingle_unittests.actions_depends.stamp: stamp $
    libjingle_glue.a libnotifier.a libnotifier_test_util.a libbase.a $
    librun_all_unittests.a libtest_support_base.a libnet.a $
    libnet_test_support.a libgmock.a libgtest.a libjingle.a $
    libbase_static.a liballocator_extension_thunks.a libmodp_b64.a $
    libdynamic_annotations.a libevent.a libbase_i18n.a libicui18n.a $
    libicuuc.a icudtl.dat icudtl.dat libprotobuf_lite.a liburl_lib.a $
    libnet_quic_proto.a libbase_prefs.a libcrcrypto.a libboringssl.a $
    libsdch.a libchrome_zlib.a libzlib_x86_simd.a $
    obj/net/net_derived_sources.actions_rules_copies.stamp $
    obj/net/net_resources.actions_rules_copies.stamp libexpat.a $
    librtc_base.a libwebrtc_common.a librtc_base_approved.a $
    librtc_xmllite.a libjingle_p2p_constants.a libxml2.a $
    libtld_cleanup_util.a $
    obj/third_party/protobuf/py_proto.actions_rules_copies.stamp $
    libnet_with_v8.a libgin.a $
    obj/v8/tools/gyp/v8_maybe_snapshot.actions_depends.stamp $
    obj/v8/tools/gyp/v8_maybe_snapshot.actions_depends.stamp libv8_base.a $
    libv8_libbase.a libv8_external_snapshot.a $
    obj/v8/tools/gyp/js2c.actions_rules_copies.stamp natives_blob.bin

build obj/jingle/jingle_unittests.compile_depends.stamp: stamp $
    obj/net/net.compile_depends.stamp $
    obj/third_party/protobuf/py_proto.actions_rules_copies.stamp icudtl.dat $
    icudtl.dat icudtl.dat obj/net/net_quic_proto.actions_rules_copies.stamp $
    obj/net/net_derived_sources.actions_rules_copies.stamp $
    obj/net/net_resources.actions_rules_copies.stamp $
    obj/third_party/protobuf/py_proto.actions_rules_copies.stamp $
    snapshot_blob.bin snapshot_blob.bin snapshot_blob.bin snapshot_blob.bin $
    snapshot_blob.bin obj/v8/tools/gyp/js2c.actions_rules_copies.stamp $
    natives_blob.bin

defines = -DV8_DEPRECATION_WARNINGS -DCLD_VERSION=2 $
    -D__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORE=0 -DCHROMIUM_BUILD $
    -DCR_CLANG_REVISION=254049-1 -DUSE_LIBJPEG_TURBO=1 $
    -DENABLE_ONE_CLICK_SIGNIN -DENABLE_PRE_SYNC_BACKUP -DENABLE_WEBRTC=1 $
    -DENABLE_MEDIA_ROUTER=1 -DENABLE_PEPPER_CDMS $
    -DENABLE_CONFIGURATION_POLICY -DENABLE_NOTIFICATIONS -DENABLE_HIDPI=1 $
    -DDONT_EMBED_BUILD_METADATA -DFIELDTRIAL_TESTING_ENABLED $
    -DENABLE_TASK_MANAGER=1 -DENABLE_EXTENSIONS=1 -DENABLE_PDF=1 $
    -DENABLE_PLUGIN_INSTALLATION=1 -DENABLE_PLUGINS=1 $
    -DENABLE_SESSION_SERVICE=1 -DENABLE_THEMES=1 -DENABLE_AUTOFILL_DIALOG=1 $
    -DENABLE_BACKGROUND=1 -DENABLE_PRINTING=1 -DENABLE_BASIC_PRINTING=1 $
    -DENABLE_PRINT_PREVIEW=1 -DENABLE_SPELLCHECK=1 $
    -DUSE_BROWSER_SPELLCHECKER=1 -DENABLE_CAPTIVE_PORTAL_DETECTION=1 $
    -DENABLE_APP_LIST=1 -DENABLE_SETTINGS_APP=1 -DENABLE_SUPERVISED_USERS=1 $
    -DENABLE_SERVICE_DISCOVERY=1 -DV8_USE_EXTERNAL_STARTUP_DATA $
    -DFULL_SAFE_BROWSING -DSAFE_BROWSING_CSD -DSAFE_BROWSING_DB_LOCAL $
    -DGTEST_HAS_POSIX_RE=0 -DGTEST_LANG_CXX11=0 -DUNIT_TEST $
    -DGTEST_HAS_RTTI=0 -DFEATURE_ENABLE_SSL -DFEATURE_ENABLE_VOICEMAIL $
    -DEXPAT_RELATIVE_PATH -DGTEST_RELATIVE_PATH -DNO_MAIN_THREAD_WRAPPING $
    -DNO_SOUND_SYSTEM -DOSX -DWEBRTC_MAC -DWEBRTC_POSIX -DXML_STATIC $
    -DUSE_LIBPCI=1 -DUSE_OPENSSL=1 -D__STDC_CONSTANT_MACROS $
    -D__STDC_FORMAT_MACROS -DDYNAMIC_ANNOTATIONS_ENABLED=1 $
    -DWTF_USE_DYNAMIC_ANNOTATIONS=1
includes = -Igen -I../.. -I../../testing/gmock/include $
    -I../../testing/gtest/include -I../../third_party/webrtc_overrides $
    -I../../third_party/libjingle/overrides $
    -I../../third_party/libjingle/source -I../../third_party $
    -I../../third_party/expat/files/lib
cflags = -isysroot $
    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk $
    -O0 -fvisibility=hidden -Werror -Wnewline-eof -mmacosx-version-min=10.6 $
    -arch x86_64 -Wall -Wendif-labels -Wextra -Wno-unused-parameter $
    -Wno-missing-field-initializers -Wno-selector-type-mismatch $
    -Wpartial-availability -Wheader-hygiene -Wno-char-subscripts $
    -Wno-unneeded-internal-declaration -Wno-covered-switch-default $
    -Wstring-conversion -Wno-c++11-narrowing -Wno-deprecated-register $
    -Wno-inconsistent-missing-override -Wno-shift-negative-value $
    -Wno-bitfield-width
cflags_c = -std=c99 -Xclang -load -Xclang $
    /Users/superadmin/tmp/src/third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.dylib $
    -Xclang -add-plugin -Xclang find-bad-constructs -Xclang $
    -plugin-arg-find-bad-constructs -Xclang check-templates $
    -fcolor-diagnostics -fno-strict-aliasing -fstack-protector-all $
    -Wno-undefined-bool-conversion -Wno-tautological-undefined-compare
cflags_cc = -std=c++11 -stdlib=libc++ -fno-rtti -fno-exceptions $
    -fvisibility-inlines-hidden -fno-threadsafe-statics -Xclang -load $
    -Xclang $
    /Users/superadmin/tmp/src/third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.dylib $
    -Xclang -add-plugin -Xclang find-bad-constructs -Xclang $
    -plugin-arg-find-bad-constructs -Xclang check-templates $
    -fcolor-diagnostics -fno-strict-aliasing -fstack-protector-all $
    -Wno-undefined-bool-conversion -Wno-tautological-undefined-compare
cflags_objc = $cflags_c -Wobjc-missing-property-synthesis
cflags_objcc = $cflags_cc -Wobjc-missing-property-synthesis $
    -fobjc-call-cxx-cdtors
arflags = 

build obj/jingle/glue/jingle_unittests.chrome_async_socket_unittest.o: cxx $
    ../../jingle/glue/chrome_async_socket_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build obj/jingle/glue/jingle_unittests.fake_ssl_client_socket_unittest.o: $
    cxx ../../jingle/glue/fake_ssl_client_socket_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build obj/jingle/glue/jingle_unittests.jingle_glue_mock_objects.o: cxx $
    ../../jingle/glue/jingle_glue_mock_objects.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build obj/jingle/glue/jingle_unittests.logging_unittest.o: cxx $
    ../../jingle/glue/logging_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build obj/jingle/glue/jingle_unittests.mock_task.o: cxx $
    ../../jingle/glue/mock_task.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/glue/jingle_unittests.proxy_resolving_client_socket_unittest.o: $
    cxx ../../jingle/glue/proxy_resolving_client_socket_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build obj/jingle/glue/jingle_unittests.task_pump_unittest.o: cxx $
    ../../jingle/glue/task_pump_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build obj/jingle/glue/jingle_unittests.thread_wrapper_unittest.o: cxx $
    ../../jingle/glue/thread_wrapper_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/base/jingle_unittests.weak_xmpp_client_unittest.o: $
    cxx ../../jingle/notifier/base/weak_xmpp_client_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build obj/jingle/notifier/base/jingle_unittests.xmpp_connection_unittest.o: $
    cxx ../../jingle/notifier/base/xmpp_connection_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/communicator/jingle_unittests.connection_settings_unittest.o: $
    cxx ../../jingle/notifier/communicator/connection_settings_unittest.cc $
    || obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/communicator/jingle_unittests.login_settings_unittest.o: $
    cxx ../../jingle/notifier/communicator/login_settings_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/communicator/jingle_unittests.single_login_attempt_unittest.o: $
    cxx ../../jingle/notifier/communicator/single_login_attempt_unittest.cc $
    || obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/listener/jingle_unittests.non_blocking_push_client_unittest.o: $
    cxx ../../jingle/notifier/listener/non_blocking_push_client_unittest.cc $
    || obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/listener/jingle_unittests.notification_defines_unittest.o: $
    cxx ../../jingle/notifier/listener/notification_defines_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build obj/jingle/notifier/listener/jingle_unittests.push_client_unittest.o: $
    cxx ../../jingle/notifier/listener/push_client_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/listener/jingle_unittests.push_notifications_send_update_task_unittest.o: $
    cxx $
    ../../jingle/notifier/listener/push_notifications_send_update_task_unittest.cc $
    || obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/listener/jingle_unittests.push_notifications_subscribe_task_unittest.o: $
    cxx $
    ../../jingle/notifier/listener/push_notifications_subscribe_task_unittest.cc $
    || obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/listener/jingle_unittests.send_ping_task_unittest.o: $
    cxx ../../jingle/notifier/listener/send_ping_task_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/listener/jingle_unittests.xml_element_util_unittest.o: $
    cxx ../../jingle/notifier/listener/xml_element_util_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp
build $
    obj/jingle/notifier/listener/jingle_unittests.xmpp_push_client_unittest.o: $
    cxx ../../jingle/notifier/listener/xmpp_push_client_unittest.cc || $
    obj/jingle/jingle_unittests.compile_depends.stamp

ldflags = -framework Cocoa -framework Foundation -framework IOKit $
    -framework Security -framework SystemConfiguration -framework Cocoa $
    -framework Foundation -framework IOKit -framework Security -framework $
    SystemConfiguration -framework Cocoa -framework Foundation -framework $
    IOKit -framework Security -framework SystemConfiguration -framework $
    Cocoa -framework Foundation -framework IOKit -framework Security $
    -framework SystemConfiguration -framework Cocoa -framework Foundation $
    -framework IOKit -framework Security -framework SystemConfiguration $
    -framework Cocoa -framework Foundation -framework IOKit -framework $
    Security -framework SystemConfiguration -Wl,-search_paths_first $
    -Wl,-pie -mmacosx-version-min=10.6 -isysroot $
    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk $
    -arch x86_64 -L. -stdlib=libc++
libs = '-L../../third_party/libc++-static' -framework AppKit -framework $
    ApplicationServices -framework Carbon -framework CoreFoundation $
    -framework Foundation -framework IOKit -framework Security -framework $
    SystemConfiguration $
    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/lib/libresolv.tbd
build jingle_unittests: link $
    obj/jingle/glue/jingle_unittests.chrome_async_socket_unittest.o $
    obj/jingle/glue/jingle_unittests.fake_ssl_client_socket_unittest.o $
    obj/jingle/glue/jingle_unittests.jingle_glue_mock_objects.o $
    obj/jingle/glue/jingle_unittests.logging_unittest.o $
    obj/jingle/glue/jingle_unittests.mock_task.o $
    obj/jingle/glue/jingle_unittests.proxy_resolving_client_socket_unittest.o $
    obj/jingle/glue/jingle_unittests.task_pump_unittest.o $
    obj/jingle/glue/jingle_unittests.thread_wrapper_unittest.o $
    obj/jingle/notifier/base/jingle_unittests.weak_xmpp_client_unittest.o $
    obj/jingle/notifier/base/jingle_unittests.xmpp_connection_unittest.o $
    obj/jingle/notifier/communicator/jingle_unittests.connection_settings_unittest.o $
    obj/jingle/notifier/communicator/jingle_unittests.login_settings_unittest.o $
    obj/jingle/notifier/communicator/jingle_unittests.single_login_attempt_unittest.o $
    obj/jingle/notifier/listener/jingle_unittests.non_blocking_push_client_unittest.o $
    obj/jingle/notifier/listener/jingle_unittests.notification_defines_unittest.o $
    obj/jingle/notifier/listener/jingle_unittests.push_client_unittest.o $
    obj/jingle/notifier/listener/jingle_unittests.push_notifications_send_update_task_unittest.o $
    obj/jingle/notifier/listener/jingle_unittests.push_notifications_subscribe_task_unittest.o $
    obj/jingle/notifier/listener/jingle_unittests.send_ping_task_unittest.o $
    obj/jingle/notifier/listener/jingle_unittests.xml_element_util_unittest.o $
    obj/jingle/notifier/listener/jingle_unittests.xmpp_push_client_unittest.o $
    libjingle_glue.a libnotifier.a libnotifier_test_util.a libbase.a $
    librun_all_unittests.a libtest_support_base.a libnet.a $
    libnet_test_support.a libgmock.a libgtest.a libjingle.a $
    libbase_static.a liballocator_extension_thunks.a libmodp_b64.a $
    libdynamic_annotations.a libevent.a libbase_i18n.a libicui18n.a $
    libicuuc.a libprotobuf_lite.a liburl_lib.a libnet_quic_proto.a $
    libbase_prefs.a libcrcrypto.a libboringssl.a libsdch.a libchrome_zlib.a $
    libzlib_x86_simd.a libexpat.a librtc_base.a libwebrtc_common.a $
    librtc_base_approved.a librtc_xmllite.a libjingle_p2p_constants.a $
    libxml2.a libtld_cleanup_util.a libnet_with_v8.a libgin.a libv8_base.a $
    libv8_libbase.a libv8_external_snapshot.a | $
    obj/net/net_derived_sources.actions_rules_copies.stamp icudtl.dat $
    obj/v8/tools/gyp/js2c.actions_rules_copies.stamp $
    obj/net/net_resources.actions_rules_copies.stamp $
    obj/v8/tools/gyp/v8_maybe_snapshot.actions_depends.stamp $
    natives_blob.bin $
    obj/third_party/protobuf/py_proto.actions_rules_copies.stamp
  ld = $ldxx
  postbuilds = $ && (export $
      BUILT_FRAMEWORKS_DIR=/Users/superadmin/tmp/src/out/Debug; export $
      BUILT_PRODUCTS_DIR=/Users/superadmin/tmp/src/out/Debug; export $
      CONFIGURATION=Debug; export EXECUTABLE_NAME=jingle_unittests; export $
      EXECUTABLE_PATH=jingle_unittests; export $
      FULL_PRODUCT_NAME=jingle_unittests; export $
      PRODUCT_NAME=jingle_unittests; export $
      PRODUCT_TYPE=com.apple.product-type.tool; export $
      SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk; $
      export SRCROOT=/Users/superadmin/tmp/src/out/Debug/../../jingle; $
      export SOURCE_ROOT="$${SRCROOT}"; export $
      TARGET_BUILD_DIR=/Users/superadmin/tmp/src/out/Debug; export $
      TEMP_DIR="$${TMPDIR}"; (cd ../../jingle && $
      ../build/mac/change_mach_o_flags_from_xcode.sh); G=$$?; ((exit $$G) $
      || rm -rf jingle_unittests) && exit $$G)
